#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements. See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership. The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License. You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied. See the License for the
# specific language governing permissions and limitations
# under the License.
#

# How to minimize build/test time
#
#  * Use parallel build (-T) when using 'package'. (it does not work with 'install')
#  * Exclude unnecessary submodules with '-pl !<module>,!<module>,...'.
#  * Include only necessary submodules with -pl <module>,<module>,...'.


name: Zeppelin CI

on: [push, pull_request]

jobs:
  # Test License compliance using RAT tool
  license-check:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: |
        mvn clean -B -Prat org.apache.rat:apache-rat-plugin:check

  # Default build command, no tests
  build-only-all:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: | # build every module without running test
        mvn package -B -T 2C -DskipTests

  # Test core modules (exclude interpreter listed in ./testing/interpreters_exclude.sh), with distribution package
  test-core-only-distr:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run: |
        mvn package -B -T 2C -Pbuild-distr -DskipTests -Phelium-dev -Pexamples -pl $(./testing/interpreters_exclude.sh)
    - name: Run test
      env:
        PYTHON: 3
        SPARKR: true
      run: |
        mvn verify -B -Pusing-packaged-distr -Pspark-2.2 -Pspark-scala-2.11 -Phelium-dev -Pexamples -pl $(./testing/interpreters_exclude.sh) -Dtests.to.exclude=**/JdbcIntegrationTest.java,**/SparkIntegrationTest.java,**/ZeppelinSparkClusterTest.java,**/org/apache/zeppelin/spark/*,**/HeliumApplicationFactoryTest.java -DfailIfNoTests=false

  # Test interpreter modules listed in ./testing/interpreters_exclude.sh.
  test-interpreters-only:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Install python dependencies
      env:
        PYTHON: 3
        TENSORFLOW: 1.0.0
      run: |
        ./testing/install_external_dependencies.sh
    - name: Build with Maven
      run: | # build all interpreter modules
        mvn install -B -Pscala-2.11 -DskipTests -pl $(./testing/interpreters_exclude.sh | sed 's/!//g') -am -Drat.skip=true
    - name: Run test
      run: | # run test of all interpreter modules
        source ~/.environ  # apply python environment that is configured in 'Install python dependencies' step
        mvn test -B -Pscala-2.11 -DfailIfNoTests=false -pl $(./testing/interpreters_exclude.sh | sed 's/!//g')

  # Run e2e and selenium tests
  test-end-to-end:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Start X
      env:
        DISPLAY: :99.0
      run: | # start x frame buffer for e2e test using chrome / firefox
        sudo nohup Xvfb &
    - name: Build with Maven
      run: |
        mvn install -B -DskipTests -pl $(./testing/interpreters_exclude.sh)
    - name: Run test
      env:
        CI: true
        DISPLAY: :99.0
      run: |
        mvn verify -B -Pweb-e2e -Pintegration -pl zeppelin-web,zeppelin-integration -DfailIfNoTests=false

  # Test flink module
  test-flink-module:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Install python dependencies
      env:
        PYTHON: 3
      run: |
        ./testing/install_external_dependencies.sh
    - name: Build with Maven
      run: | # build flink module and dependencies
        mvn install -B -Pscala-2.11 -DskipTests -pl flink -am -Drat.skip=true
    - name: Run test
      run: | # run test on flink module
        source ~/.environ  # apply python environment that is configured in 'Install python dependencies' step
        mvn test -B -Pspark-scala-2.11 -pl flink

  # Test Spark
  integration-test-spark-jdbc:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        scala: ["2.11", "2.12"]
        spark: ["2.4"]
        python: ["2"]
    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Install python dependencies
      env:
        PYTHON: ${{ matrix.python }}
        SCALA_VER: ${{ matrix.scala }}
        BUILD_PLUGINS: true
        SPARKR: true
      run: |
        ./testing/install_external_dependencies.sh
    - name: Build with Maven
      run: | # build flink module and dependencies
        mvn install -B -Drat.skip=true -DskipTests -Pscala-${{matrix.scala}} -Pspark-${{matrix.spark}} -Pspark-scala-${{matrix.scala}} -Phadoop2 -Pintegration -pl zeppelin-interpreter-integration,jdbc,zeppelin-web,spark/spark-dependencies -am
    - name: Run test
      run: | # run test on flink module
        source ~/.environ  # apply python environment that is configured in 'Install python dependencies' step
        mvn test -B -Pscala-${{matrix.scala}} -Pspark-${{matrix.spark}} -Pspark-scala-${{matrix.scala}} -Phadoop2 -Pintegration -pl zeppelin-interpreter-integration,jdbc,zeppelin-web,spark/spark-dependencies -am -Dtest=ZeppelinSparkClusterTest24,SparkIntegrationTest24,JdbcIntegrationTest,org.apache.zeppelin.spark.* -DfailIfNoTests=false

